apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-output-deployment
  namespace: exercises
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-output
  template:
    metadata:
      labels:
        app: log-output
    spec:
      volumes:
        - name: shared-logs
          persistentVolumeClaim:
            claimName: log-volume-claim
        - name: config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: info-configmap
            # An array of keys from the ConfigMap to create as files
            items:
            - key: "information.txt"
              path: "information.txt"
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: log-writer
          image: docker.io/iku1/log_output_writer:1.11
          imagePullPolicy: Always
          volumeMounts:
          - name: shared-logs
            mountPath: /tmp/log_output
          env:
            - name: LOG_FILE_PATH
              value: "/tmp/log_output/random.log"
        - name: log-reader-api
          image: docker.io/iku1/log_output_reader_api:2.5
          imagePullPolicy: Always
          volumeMounts:
          - name: shared-logs
            mountPath: /tmp/log_output
          - name: config
            mountPath: "/config"
            readOnly: true
          env:
            - name: LOG_FILE_PATH
              value: "/tmp/log_output/random.log"
            - name: INFO_FILE_PATH
              value: "/config/information.txt"
            - name: PONG_COUNT_SERVICE_URL
              value: "http://ping-pong-svc:5001/pings"
            - name: PORT
              value: "5000"
            - name: MESSAGE # ENV name passed to container
              valueFrom:
                configMapKeyRef:
                  name: hello-msg
                  key: MESSAGE # ENV name in the secret
